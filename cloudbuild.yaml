steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/tripaibuddy-backend', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tripaibuddy-backend']

  # Create VPC connector if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'compute'
      - 'networks'
      - 'vpc-access'
      - 'connectors'
      - 'create'
      - 'redis-connector'
      - '--network'
      - 'default'
      - '--region'
      - 'us-central1'
      - '--range'
      - '10.8.0.0/28'
      - '--min-instances'
      - '2'
      - '--max-instances'
      - '3'
      - '--machine-type'
      - 'e2-micro'
    allowFailure: true  # Ignore error if connector already exists

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'tripaibuddy-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/tripaibuddy-backend'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--vpc-connector'
      - 'redis-connector'
      - '--vpc-egress'
      - 'private-ranges-only'
      - '--update-secrets'
      - 'OPENAI_API_KEY=openai-api-key:latest'
      - '--update-secrets'
      - 'GOOGLE_PLACES_API_KEY=google-places-api-key:latest'
      - '--update-secrets'
      - 'PINECONE_API_KEY=pinecone-api-key:latest'
      - '--update-secrets'
      - 'REDIS_URL=redis-url:latest'
      - '--update-secrets'
      - 'PINECONE_INDEX_NAME=pinecone-index-name:latest'
      - '--set-env-vars'
      - 'PINECONE_ENVIRONMENT=gcp-starter,ENABLE_AGENTIC_SYSTEM=true'

images:
  - 'gcr.io/$PROJECT_ID/tripaibuddy-backend' 